<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Identity_question extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Model_identity_question');
    }

    /*
     * Listing of identity_question
     */
    function index()
    {
        $data['identity_question'] = $this->Model_identity_question->get_all_identity_question();

        $data['title'] = 'Identity question';
        $data['_view'] = 'identity_question/index';

        $this->load->view('AdminUser/template/header',$data);
        $this->load->view('AdminUser/identity_question/index',$data);
        $this->load->view('AdminUser/template/footer',$data);
    }

    /*
     * Adding a new identity_question
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('QUESTION','QUESTION','required|max_length[1024]');

		if($this->form_validation->run())
        {
            $params = array(
				'QUESTION' => $this->input->post('QUESTION'),
            );

            $identity_question_id = $this->Model_identity_question->add_identity_question($params);
            redirect(site_url('Identity_question/index'));
        }
        else
        {
            $data['title'] = 'Add identity question';
            $data['_view'] = 'identity_question/add';
            $this->load->view('AdminUser/template/header',$data);
            $this->load->view('AdminUser/identity_question/add',$data);
            $this->load->view('AdminUser/template/footer',$data);

        }
    }

    /*
     * Editing a identity_question
     */
    function edit($ID_IDENTITY_QUESTION)
    {
        // check if the identity_question exists before trying to edit it
        $data['identity_question'] = $this->Model_identity_question->get_identity_question($ID_IDENTITY_QUESTION);

        if(isset($data['identity_question']['ID_IDENTITY_QUESTION']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('QUESTION','QUESTION','required|max_length[1024]');

			if($this->form_validation->run())
            {
                $params = array(
					'QUESTION' => $this->input->post('QUESTION'),
                );

                $this->Model_identity_question->update_identity_question($ID_IDENTITY_QUESTION,$params);
                redirect(site_url('Identity_question/index'));
            }
            else
            {
                $data['title'] = 'Edit identity question';
                $data['_view'] = 'identity_question/edit';

                $this->load->view('AdminUser/template/header',$data);
                $this->load->view('AdminUser/identity_question/edit',$data);
                $this->load->view('AdminUser/template/footer',$data);
            }
        }
        else
            show_error('The identity_question you are trying to edit does not exist.');
    }

    /*
     * Deleting identity_question
     */
    function remove($ID_IDENTITY_QUESTION)
    {
        $identity_question = $this->Model_identity_question->get_identity_question($ID_IDENTITY_QUESTION);

        // check if the identity_question exists before trying to delete it
        if(isset($identity_question['ID_IDENTITY_QUESTION']))
        {
            $this->Model_identity_question->delete_identity_question($ID_IDENTITY_QUESTION);
            redirect(site_url('Identity_question/index'));
        }
        else
            show_error('The identity_question you are trying to delete does not exist.');
    }

}
