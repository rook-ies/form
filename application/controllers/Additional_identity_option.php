<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Additional_identity_option extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Model_additional_identity_option');
    }

    /*
     * Listing of additional_identity_option
     */
    function index()
    {
        $data['additional_identity_option'] = $this->Model_additional_identity_option->get_all_additional_identity_option();

        $data['_view'] = 'additional_identity_option/index';
        $data['title'] = 'Additional identity option';

        $this->load->view('AdminUser/template/header',$data);
        $this->load->view('AdminUser/additional_identity_option/index',$data);
        $this->load->view('AdminUser/template/footer',$data);
    }

    /*
     * Adding a new additional_identity_option
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('ID_ADDITIONAL_IDENTITY_QUESTION','ID ADDITIONAL IDENTITY QUESTION','required');
		$this->form_validation->set_rules('ID_INPUT_TYPE','ID INPUT TYPE','required');
		$this->form_validation->set_rules('OPTION','OPTION','required|max_length[1024]');

		if($this->form_validation->run())
        {
            $params = array(
				'ID_ADDITIONAL_IDENTITY_QUESTION' => $this->input->post('ID_ADDITIONAL_IDENTITY_QUESTION'),
				'ID_INPUT_TYPE' => $this->input->post('ID_INPUT_TYPE'),
				'OPTION' => $this->input->post('OPTION'),
            );

            $additional_identity_option_id = $this->Model_additional_identity_option->add_additional_identity_option($params);
            redirect(site_url('Additional_identity_question/edit/'.$this->session->currentAdditionalIdentityQuestion));
        }
        else
        {
			$this->load->model('Model_additional_identity_question');
			$data['all_additional_identity_question'] = $this->Model_additional_identity_question->get_all_additional_identity_question();

			$this->load->model('Model_input_type');
			$data['all_input_type'] = $this->Model_input_type->get_all_input_type();

            $data['_view'] = 'additional_identity_option/add';
            $data['title'] = 'Add additional identity option';

            $this->load->view('AdminUser/template/header',$data);
            $this->load->view('AdminUser/additional_identity_option/add',$data);
            $this->load->view('AdminUser/template/footer',$data);
        }
    }

    /*
     * Editing a additional_identity_option
     */
    function edit($ID_ADDITIONAL_IDENTITY_OPTION)
    {
        // check if the additional_identity_option exists before trying to edit it
        $data['additional_identity_option'] = $this->Model_additional_identity_option->get_additional_identity_option($ID_ADDITIONAL_IDENTITY_OPTION);

        if(isset($data['additional_identity_option']['ID_ADDITIONAL_IDENTITY_OPTION']))
        {
            $this->load->library('form_validation');

			//$this->form_validation->set_rules('ID_ADDITIONAL_IDENTITY_QUESTION','ID ADDITIONAL IDENTITY QUESTION','required');
			$this->form_validation->set_rules('ID_INPUT_TYPE','ID INPUT TYPE','required');
			$this->form_validation->set_rules('OPTION','OPTION','required|max_length[1024]');

			if($this->form_validation->run())
            {
                $params = array(
					//'ID_ADDITIONAL_IDENTITY_QUESTION' => $this->input->post('ID_ADDITIONAL_IDENTITY_QUESTION'),
					'ID_INPUT_TYPE' => $this->input->post('ID_INPUT_TYPE'),
					'OPTION' => $this->input->post('OPTION'),
                );

                $this->Model_additional_identity_option->update_additional_identity_option($ID_ADDITIONAL_IDENTITY_OPTION,$params);
                //echo "bisa";
                redirect(site_url('Additional_identity_question/edit/'.$this->session->currentAdditionalIdentityQuestion));
            }
            else
            {
				$this->load->model('Model_additional_identity_question');
				$data['all_additional_identity_question'] = $this->Model_additional_identity_question->get_all_additional_identity_question();

				$this->load->model('Model_input_type');
				$data['all_input_type'] = $this->Model_input_type->get_all_input_type();

                $data['_view'] = 'additional_identity_option/edit';
                $data['title'] = 'Edit additional identity option';

                //echo "gabisa";
                $this->load->view('AdminUser/template/header',$data);
                $this->load->view('AdminUser/additional_identity_option/edit',$data);
                $this->load->view('AdminUser/template/footer',$data);
            }
        }
        else
            show_error('The additional_identity_option you are trying to edit does not exist.');
    }

    /*
     * Deleting additional_identity_option
     */
    function remove($ID_ADDITIONAL_IDENTITY_OPTION)
    {
        $additional_identity_option = $this->Model_additional_identity_option->get_additional_identity_option($ID_ADDITIONAL_IDENTITY_OPTION);

        // check if the additional_identity_option exists before trying to delete it
        if(isset($additional_identity_option['ID_ADDITIONAL_IDENTITY_OPTION']))
        {
            $this->Model_additional_identity_option->delete_additional_identity_option($ID_ADDITIONAL_IDENTITY_OPTION);
            redirect(site_url('Additional_identity_question/edit/'.$this->session->currentAdditionalIdentityQuestion));
        }
        else
            show_error('The additional_identity_option you are trying to delete does not exist.');
    }

}
