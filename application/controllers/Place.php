<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Place extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Model_place');$this->logged_in();
    }

    private function logged_in() {
        if(! $this->session->userdata('authenticated')) {
            redirect(site_url('SuperAdmin/login'));
        }
    }
    /*
     * Listing of place
     */
    function index()
    {
        $data['place'] = $this->Model_place->get_all_place();

        $data['title'] = 'Place';
        $data['_view'] = 'place/index';
        $this->load->view('SuperAdmin/template/header',$data);
        $this->load->view('SuperAdmin/place/index',$data);
        $this->load->view('SuperAdmin/template/footer',$data);
    }

    /*
     * Adding a new place
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('ID_PLACE_CATEGORY','ID PLACE CATEGORY','required');
		$this->form_validation->set_rules('NAMA','NAMA','required|max_length[1024]');
		$this->form_validation->set_rules('ID_PLACE_TYPE','ID PLACE TYPE','required');

		if($this->form_validation->run())
        {
            $params = array(
				'ID_PLACE_TYPE' => $this->input->post('ID_PLACE_TYPE'),
				'ID_PLACE_CATEGORY' => $this->input->post('ID_PLACE_CATEGORY'),
				'NAMA' => $this->input->post('NAMA'),
            );

            $place_id = $this->Model_place->add_place($params);
            redirect(site_url('Place/index'));
        }
        else
        {
			$this->load->model('Model_place_type');
			$data['all_place_type'] = $this->Model_place_type->get_all_place_type();

			$this->load->model('Model_place_category');
			$data['all_place_category'] = $this->Model_place_category->get_all_place_category();

            $data['title'] = 'Add place';
            $data['_view'] = 'place/add';
            $this->load->view('SuperAdmin/template/header',$data);
            $this->load->view('SuperAdmin/place/add',$data);
            $this->load->view('SuperAdmin/template/footer',$data);
        }
    }

    /*
     * Editing a place
     */
    function edit($ID_PLACE)
    {
        // check if the place exists before trying to edit it
        $data['place'] = $this->Model_place->get_place($ID_PLACE);

        if(isset($data['place']['ID_PLACE']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('ID_PLACE_CATEGORY','ID PLACE CATEGORY','required');
			$this->form_validation->set_rules('NAMA','NAMA','required|max_length[1024]');
			$this->form_validation->set_rules('ID_PLACE_TYPE','ID PLACE TYPE','required');

			if($this->form_validation->run())
            {
                $params = array(
					'ID_PLACE_TYPE' => $this->input->post('ID_PLACE_TYPE'),
					'ID_PLACE_CATEGORY' => $this->input->post('ID_PLACE_CATEGORY'),
					'NAMA' => $this->input->post('NAMA'),
                );

                $this->Model_place->update_place($ID_PLACE,$params);
                redirect(site_url('Place/index'));
            }
            else
            {
				$this->load->model('Model_place_type');
				$data['all_place_type'] = $this->Model_place_type->get_all_place_type();

				$this->load->model('Model_place_category');
				$data['all_place_category'] = $this->Model_place_category->get_all_place_category();

                $data['title'] = 'Edit place';
                $data['_view'] = 'place/edit';
                //print_r($data['place']);
                $this->load->view('SuperAdmin/template/header',$data);
                $this->load->view('SuperAdmin/place/edit',$data);
                $this->load->view('SuperAdmin/template/footer',$data);
            }
        }
        else
            show_error('The place you are trying to edit does not exist.');
    }

    /*
     * Deleting place
     */
    function remove($ID_PLACE)
    {
        $place = $this->Model_place->get_place($ID_PLACE);

        // check if the place exists before trying to delete it
        if(isset($place['ID_PLACE']))
        {
            $this->Model_place->delete_place($ID_PLACE);
            redirect(site_url('Place/index'));
        }
        else
            show_error('The place you are trying to delete does not exist.');
    }

}
